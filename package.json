{
  "name": "vscode-number-peeker",
  "displayName": "VSCode number peeker",
  "description": "Hover over number in VSCode and quickly see alternative representations",
  "version": "0.0.1",
  "license": "./LICENSE",
  "publisher": "TDiblik",
  "author": {
    "name": "Tomáš Diblík",
    "email": "dibla.tomas@post.cz",
    "url": "https://tomasdiblik.cz"
  },
  "categories": [
    "Visualization",
    "Other"
  ],
  "engines": {
    "vscode": "^1.78.0"
  },
  "activationEvents": [
    "*"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "configuration": {
      "title": "Number Peeker",
      "properties": {
        "number-peeker.binary.showUnsignedWhenPossible": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Whether to show usigned representation whenever user hovers over positive number"
        },
        "number-peekeer.binary.showI8WhenPossible": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "Whether to show usigned 8 bit representation whenever user hovers over negative number"
        },
        "number-peekeer.binary.showI16WhenPossible": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "Whether to show usigned 16 bit representation whenever user hovers over negative number"
        },
        "number-peekeer.binary.showI32WhenPossible": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Whether to show usigned 32 bit representation whenever user hovers over negative number"
        },
        "number-peeker.binary.showWarningWhenNumberOutsideOfRange": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Whether to show warning that number is outside of the supported range of numbers (currentlly u32 and i32)"
        },
        "number-peeker.binary.splitNumbersEveryN": {
          "type": "integer",
          "default": 8,
          "markdownDescription": "How many numbers to should be in one group, before getting splitted by space. If you don't want to split every N characters, just set this value really high, like 99999.. If you don't want to split every N characters, just set this value really high, like 99999 (and set number-peeker.binary.padding to false!)."
        },
        "number-peeker.binary.padding": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Whether to add padding (zeros -- '0') to splitted binary numbers."
        },
        "number-peeker.hex.showUpercased": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "Whether to show hexadecimal characters upercased"
        },
        "number-peeker.hex.trimTrailingFs": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Whether to trim trailing Fs from hex numbers"
        },
        "number-peeker.hex.prependZeroWhenPossible": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "When hex number contains only one place, prepend zero, just to make it pretier :D"
        },
        "number-peeker.hex.show0xBeforeHex": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Show '0x' before hex numbers, just to make it pretier :D"
        }
      }
    },
    "commands": [
      {
        "command": "number-peeker.reload-config",
        "title": "Number peeker: Reload configuration"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/vscode": "^1.78.0",
    "@types/glob": "^8.1.0",
    "@types/mocha": "^10.0.1",
    "@types/node": "16.x",
    "@typescript-eslint/eslint-plugin": "^5.59.1",
    "@typescript-eslint/parser": "^5.59.1",
    "eslint": "^8.39.0",
    "glob": "^8.1.0",
    "mocha": "^10.2.0",
    "typescript": "^5.0.4",
    "@vscode/test-electron": "^2.3.0"
  }
}
